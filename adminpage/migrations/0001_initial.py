# Generated by Django 4.2 on 2023-08-08 03:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Admin",
            fields=[
                (
                    "admin_id",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("pwd", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "admin",
            },
        ),
        migrations.CreateModel(
            name="point_A",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        primary_key=True, serialize=False, verbose_name="중복제거"
                    ),
                ),
                ("user_name", models.CharField(max_length=20, verbose_name="유저 아이디")),
                (
                    "remaining_points",
                    models.IntegerField(default=0, verbose_name="남은 포인트"),
                ),
            ],
            options={
                "verbose_name": "유저의 남은 포인트 조회하는 테이블",
                "verbose_name_plural": "유저의 남은 포인트 조회하는 테이블",
                "db_table": "point_a",
            },
        ),
        migrations.CreateModel(
            name="point_B",
            fields=[
                (
                    "point_num",
                    models.IntegerField(
                        primary_key=True, serialize=False, verbose_name="중복제거"
                    ),
                ),
                ("user_name", models.CharField(max_length=20, verbose_name="지급 유저")),
                ("point_version", models.IntegerField(verbose_name="작업 환경(1원시 2라벨)")),
                ("point_pay", models.IntegerField(verbose_name="지급 포인트")),
                ("point_date", models.DateField(verbose_name="지급 일자")),
            ],
            options={
                "verbose_name": "포인트 지급 테이블 (원시 / 라벨링 데이터 검증되면 포인트(로그) 지급됨)",
                "db_table": "point_b",
            },
        ),
        migrations.CreateModel(
            name="point_C",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        primary_key=True, serialize=False, verbose_name="중복제거"
                    ),
                ),
                (
                    "point_version",
                    models.IntegerField(verbose_name="변경하는 포인트 (1 원시 2라벨링)"),
                ),
                ("point_pay", models.IntegerField(verbose_name="변경하는 가격")),
                ("point_date", models.DateField(verbose_name="변경일자")),
            ],
            options={
                "verbose_name": "포인트 가격 조정하는 테이블",
                "db_table": "point_c",
            },
        ),
        migrations.CreateModel(
            name="point_D",
            fields=[
                (
                    "money_num",
                    models.IntegerField(
                        primary_key=True, serialize=False, verbose_name="중복제거"
                    ),
                ),
                ("money_Payments", models.IntegerField(verbose_name="전환 가격")),
                ("money_date", models.DateField(verbose_name="요청일자")),
                ("money_a", models.IntegerField(verbose_name="상태(0 대기 1 지급 2반환)")),
                ("user_name", models.CharField(max_length=20, verbose_name="요청 유저")),
            ],
            options={
                "verbose_name": "포인트 현금 전환 로그 테이블",
                "db_table": "point_d",
            },
        ),
        migrations.CreateModel(
            name="PointSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label_point", models.PositiveIntegerField()),
                ("upload_point", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "point_setting",
            },
        ),
        migrations.AddIndex(
            model_name="point_d",
            index=models.Index(fields=["user_name"], name="point_d_user_na_15e457_idx"),
        ),
        migrations.AddIndex(
            model_name="point_b",
            index=models.Index(fields=["user_name"], name="point_b_user_na_d73902_idx"),
        ),
        migrations.AddIndex(
            model_name="point_a",
            index=models.Index(fields=["user_name"], name="point_a_user_na_2586dd_idx"),
        ),
    ]
